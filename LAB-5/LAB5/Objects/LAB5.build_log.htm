<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.36.0.0
Copyright (C) 2021 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: Oguz Can Duran, Bilkent, LIC=----
 
Tool Versions:
Toolchain:       MDK-Lite  Version: 5.36.0.0
Toolchain Path:  C:\Keil_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.16
Assembler:       Armasm.exe V6.16
Linker/Locator:  ArmLink.exe V6.16
Library Manager: ArmAr.exe V6.16
Hex Converter:   FromElf.exe V6.16
CPU DLL:         SARMCM3.DLL V5.36.0.0
Dialog DLL:      DARMCM1.DLL V1.19.4.0
Target DLL:      UL2CM3.DLL V1.164.0.0
Dialog DLL:      TARMCM1.DLL V1.14.4.0
 
<h2>Project:</h2>
C:\Users\Oguz\Desktop\LAB5\LAB5.uvprojx
Project File Date:  04/25/2022

<h2>Output:</h2>
*** Using Compiler 'V6.16', folder: 'C:\Keil_v5\ARM\ARMCLANG\Bin'
Build target 'Target 1'
assembling startup_MKL25Z4.s...
compiling system_MKL25Z4.c...
LAB5.C(1): warning: non-portable path to file '<MKL25Z4.h>'; specified path differs in case from file name on disk [-Wnonportable-include-path]
#include <MKL25Z4.H>
         ^~~~~~~~~~~
         <MKL25Z4.h>
LAB5.C(142): warning: implicit conversion loses integer precision: 'unsigned int' to 'unsigned char' [-Wimplicit-int-conversion]
                                LCD_data('0' + digit);
                                ~~~~~~~~ ~~~~^~~~~~~
LAB5.C(143): warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                                temp = (temp*10) + digit;                               
                                     ~ ~~~~~~~~~~^~~~~~~
LAB5.C(143): warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                                temp = (temp*10) + digit;                               
                                        ~~~~^~~  ~
LAB5.C(146): warning: implicit conversion turns floating-point number into integer: 'double' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
                        freq1= round((float)(327656/f1)); 
                             ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
LAB5.C(146): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
                        freq1= round((float)(327656/f1)); 
                               ~~~~~ ^~~~~~~~~~~~~~~~~~
LAB5.C(147): warning: implicit conversion turns floating-point number into integer: 'double' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
                        freq2 = round((float)(327656/f2));
                              ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
LAB5.C(147): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
                        freq2 = round((float)(327656/f2));
                                ~~~~~ ^~~~~~~~~~~~~~~~~~
LAB5.C(149): warning: implicit conversion turns floating-point number into integer: 'double' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
                        duty1 = round((float)((327656*d1)/(f1*100)));
                              ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LAB5.C(149): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
                        duty1 = round((float)((327656*d1)/(f1*100)));
                                ~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LAB5.C(150): warning: implicit conversion turns floating-point number into integer: 'double' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
                        duty2 = round((float)((327656*d2)/(f2*100)));
                              ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LAB5.C(150): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
                        duty2 = round((float)((327656*d2)/(f2*100)));
                                ~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LAB5.C(159): warning: implicit conversion turns floating-point number into integer: 'double' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
                        TPM1->MOD = round(freq2); /* Set up modulo register for 60 kHz */
                                  ~ ^~~~~~~~~~~~
LAB5.C(160): warning: implicit conversion turns floating-point number into integer: 'double' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
                        TPM1->CONTROLS[0].CnV = round(duty2); /* Set up channel value for 33% dutycycle */
                                              ~ ^~~~~~~~~~~~
LAB5.C(132): warning: variable 'f1' may be uninitialized when used here [-Wconditional-uninitialized]
                                        f1 *= 2;
                                        ^~
LAB5.C(26): note: initialize the variable 'f1' to silence this warning
int f1 ;
      ^
       = 0
LAB5.C(133): warning: variable 'f2' may be uninitialized when used here [-Wconditional-uninitialized]
                                        f2 *= 2;
                                        ^~
LAB5.C(27): note: initialize the variable 'f2' to silence this warning
int f2 ;
      ^
       = 0
LAB5.C(136): warning: variable 'd1' may be uninitialized when used here [-Wconditional-uninitialized]
                                        d1 += 10;
                                        ^~
LAB5.C(28): note: initialize the variable 'd1' to silence this warning
int d1;
      ^
       = 0
LAB5.C(137): warning: variable 'd2' may be uninitialized when used here [-Wconditional-uninitialized]
                                        d2 += 10;
                                        ^~
LAB5.C(29): note: initialize the variable 'd2' to silence this warning
int d2;
      ^
       = 0
LAB5.C(307): warning: no newline at end of file [-Wnewline-eof]
}
 ^
19 warnings generated.
compiling LAB5.C...
linking...
Program Size: Code=2204 RO-data=212 RW-data=0 ZI-data=352  
".\Objects\LAB5.axf" - 0 Error(s), 19 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.8.0.pack
                ARM.CMSIS.5.8.0
                CMSIS (Common Microcontroller Software Interface Standard)
   * Component: CORE Version: 5.5.0

Package Vendor: Keil
                http://www.keil.com/pack/Keil.Kinetis_KLxx_DFP.1.15.0.pack
                Keil.Kinetis_KLxx_DFP.1.15.0
                NXP Kinetis KLxx Series Device Support and Examples
   * Component: Startup Version: 2.5.0

<h2>Collection of Component include folders:</h2>
  .\RTE\Device\MKL25Z128xxx4
  .\RTE\_Target_1
  C:\Users\Oguz\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include
  C:\Users\Oguz\AppData\Local\Arm\Packs\Keil\Kinetis_KLxx_DFP\1.15.0\Device\Include

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE:5.5.0

   * Component: Keil::Device:Startup:2.5.0
      Source file:   Device\Source\ARM\startup_MKL25Z4.s
      Source file:   Device\Source\system_MKL25Z4.c
      Include file:  Device\Source\system_MKL25Z4.h
Build Time Elapsed:  00:00:01
</pre>
</body>
</html>
